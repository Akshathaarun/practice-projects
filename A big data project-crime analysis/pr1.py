from pyspark.sql import SparkSession
spark=SparkSession.builder.appName('demo').getOrCreate()
df2=spark.read.options(sep=',',header=True).csv("/home/admin1/Downloads/crime/police/2017 Cases against Police Personnels.csv",inferSchema=True)
# df2.show()
#df2.printSchema()
df1=spark.read.options(sep=',',header=True).csv("/home/admin1/Downloads/crime/police/2016 Cases against Police Personnels.csv",inferSchema=True)
# df1.show()
#df1.printSchema()
df3=spark.read.options(sep=',',header=True).csv("/home/admin1/Downloads/crime/police/2018 Cases against Police Personnels.csv",inferSchema=True)
# df3.show()
#df3.printSchema()
df4=spark.read.options(sep=',',header=True).csv("/home/admin1/Downloads/crime/escape/2016 Escapes from Police Custody.csv",inferSchema=True)
# df4.show()
# df4.printSchema()
df5=spark.read.options(sep=',',header=True).csv("/home/admin1/Downloads/crime/escape/2017 Escapes from Police Custody.csv",inferSchema=True)
# df5.show()
# df5.printSchema()
df6=spark.read.options(sep=',',header=True).csv("/home/admin1/Downloads/crime/escape/2018 Escapes from Police Custody.csv",inferSchema=True)
# df6.show()
# df6.printSchema()
df7=spark.read.options(sep=',',header=True).csv("/home/admin1/Downloads/crime/rape/2016 Victims of Rape.csv",inferSchema=True)
# df7.show()
# df7.printSchema()
df8=spark.read.options(sep=',',header=True).csv("/home/admin1/Downloads/crime/rape/2017 Victims of Rape.csv",inferSchema=True)
# df8.show()
# df8.printSchema()
df9=spark.read.options(sep=',',header=True).csv("/home/admin1/Downloads/crime/rape/2018 Victims of Rape.csv",inferSchema=True)
# df9.show()
# df9.printSchema()
# df1.write.format('csv').save('hdfs://localhost:9000/prodir1')
# df2.write.format('csv').save('hdfs://localhost:9000/prodir2')
# df3.write.format('csv').save('hdfs://localhost:9000/prodir3')
# df4.write.format('csv').save('hdfs://localhost:9000/prodir4')
# df5.write.format('csv').save('hdfs://localhost:9000/prodir5')
# df6.write.format('csv').save('hdfs://localhost:9000/prodir6')
# df7.write.format('csv').save('hdfs://localhost:9000/prodir7')
# df8.write.format('csv').save('hdfs://localhost:9000/prodir8')
# df9.write.format('csv').save('hdfs://localhost:9000/prodir9')

import pandas as pd
import seaborn as sn
import matplotlib.pyplot as plt
# df1.toPandas().plot(kind='bar' , x='State/UT' , y= 'Total Number of Criminal Cases Registered during the year' , figsize=(20, 10))
# plt.xlabel('State')
# plt.ylabel("Total Number of Criminal Cases Registered during the year")
# plt.title("AIS")
# plt.xticks(rotation=90)
# plt.show()
# #result2=df1.groupby('State/UT').sum()
# #df1.toPandas().plot(kind='pie' , x='State/UT' , y= 'Police Personnel whose Cases were withdrawn/ Disposed Off' , figsize=(20, 10))
# #df = df1.selectExpr('S. No. AS Sl')
# #df.show()
# import numpy as np
# df1.toPandas().plot(kind='bar' , x='State/UT' , y= 'Police Personnel whose Cases were withdrawn/ Disposed Off' , figsize=(20, 10))
# xpos=np.arange(len('State/UT'))
# plt.xticks(xpos,'Police Personnel whose Cases were withdrawn/ Disposed Off')
# plt.ylabel("no of arrested police")
# plt.title("state wqise arrest Chart")
# plt.show()
#2)total no criminal cases against police reg during the year 2016
# out1=df1.select('State/UT','Total Number of Criminal Cases Registered during the year')
# out1.show()
# import matplotlib.pyplot as plt
# out1.toPandas().plot(kind='bar' , x='State/UT' , y= 'Total Number of Criminal Cases Registered during the year' ,color='green',figsize=(20, 10))
# plt.xlabel('State')
# plt.ylabel("Total Number of Criminal Cases Registered during the year 2016")
# plt.title("Total Number of Criminal Cases against police Registered during the year 2016")
# plt.xticks(rotation=90)
# plt.show()
#*****************************************************
#3)analysing child facing rape from 2016 to 2018
##victims_3year=df7.join(df9,'S. No')
#victims_3year.show(50)
#final_3year_victim=victims_3year.drop('S. No','State/UT ','Child Victims of Rape (Below 18 Yrs) - 6 Years & Above ','Child Victims of Rape (Below 18 Yrs) - 12 Years & Above ','Child Victims of Rape (Below 18 Yrs) - 16 Years & Above ','','Category','Cases Reported','Child Victims of Rape (Below 18 Yrs) - Below 6 Years','Child Victims of Rape (Below 18 Yrs) - 6 Years & Above - Below 12 Years','Child Victims of Rape (Below 18 Yrs) - 12 Years & Above - Below 16 Years','Child Victims of Rape (Below 18 Yrs) - 16 Years & Above - Below 18 Years','Women Victims of Rape (Above 18 Yrs) - 18 Years & Above - Below 30 Years','Women Victims of Rape (Above 18 Yrs) - 30 Years & Above - Below 45 Years','Women Victims of Rape (Above 18 Yrs) - 45 Years & Above - Below 60 Years','Women Victims of Rape (Above 18 Yrs) - 60 Years & Above','Women Victims of Rape (Above 18 Yrs) - Total Women/Adult Victims','Total Victims')

#final_vic1=final_3year_victim.withColumnRenamed('Child Victims of Rape (Below 18 Yrs) - Total Girl/Child Victims','total child victims in 2018')
#final_3year_victim.show()
#final_vic1.show()
#final_vic2=final_vic1.withColumnRenamed('Child Victims of Rape (Below 18 Yrs) - Total Girl /Child Victims','child victim in 2016')
#final_vic2.show()
# final_vic2.toPandas().plot(kind='bar' , x='State/UT' , y= 'child victim in 2016',  figsize=(20, 10))
# final_vic2.toPandas().plot(kind='bar' , x='State/UT' , y= 'total child victims in 2018',  figsize=(20, 10))
# plt.xlabel('State')
# plt.ylabel("child faced rape")
# plt.title("child rape")
# plt.xticks(rotation=90)
# plt.show()
import pandas as pd

#new_df=final_vic2.toPandas()
#print(new_df)
#new_df.plot(x='State/UT',y=['child victim in 2016','total child victims in 2018'],kind='bar',figsize=(10,5))
#plt.show()
#************************************
#4)2018 most 10 states where women abused more
# women_ab2018=df9.select('State/UT ','Women Victims of Rape (Above 18 Yrs) - Total Women/Adult Victims')
# women_ab2018.show()
# total_women_ab2018=women_ab2018.withColumnRenamed('Women Victims of Rape (Above 18 Yrs) - Total Women/Adult Victims','women_rape_victim_2018')
# total_women_ab2018.show()
# final_totalwomen_rape2018=total_women_ab2018.sort(total_women_ab2018['women_rape_victim_2018'].desc())
# final_totalwomen_rape2018.show()
# worst_10state_abusedwomen_2018=final_totalwomen_rape2018.limit(5)
# worst_10state_abusedwomen_2018.show()
# for_pie_worst_states = worst_10state_abusedwomen_2018.toPandas()
# for_pie_worst_states.set_index('State/UT ',inplace=True)
# for_pie_worst_states.plot(kind='pie', y="women_rape_victim_2018", figsize=(10, 5))
# plt.xlabel('State')
# plt.ylabel("women rape")
# plt.title("worst 5 state in women rape")
# plt.legend(for_pie_worst_states.index,title='States')
# plt.xticks(rotation=90)
# plt.show()
#********************************************************************
#5)most 10 staes where criminals in police is more
# total_police_personals=df1.join(df2,'State/UT')
# total_police_personals.show()
# #total_police_personals.printSchema()
# final_convicted_police_allyear=total_police_personals.join(df3,'State/UT')
# final_convicted_police_allyear.show()
# #final_convicted_police_allyear.printSchema()
# all_year_convicted_police=final_convicted_police_allyear.select('State/UT',df3['Number of Police Personel - Convicted'],total_police_personals['Number of Police Personel - Convicted'],total_police_personals['Police Personnel Convicted'])
# #all_year_convicted_police.show()
# final_all_year_convicted_police=all_year_convicted_police.withColumn('Total_convicted_police',((df3['Number of Police Personel - Convicted'])+(total_police_personals['Number of Police Personel - Convicted'])+(total_police_personals['Police Personnel Convicted'])))
# #final_all_year_convicted_police.show()
# ftotal_all_year_convicted_police=final_all_year_convicted_police.select('State/UT','Total_convicted_police')
# ordered_total_all_year_convicted_police=ftotal_all_year_convicted_police.sort(ftotal_all_year_convicted_police['Total_convicted_police'].desc())
# ordered_total_all_year_convicted_police.show( )
# most10_states_whr_police_convicted_in3years=ordered_total_all_year_convicted_police.limit(10)
# most10_states_whr_police_convicted_in3years.show()
# most10_states_whr_police_convicted_in3years.toPandas().plot(kind='bar' , x='State/UT', y='Total_convicted_police', color='r',figsize=(20, 10))
# plt.show()
# #*************************************************************************************
number_person_escaped_2016=df4.select('State/UT','Total Number of Persons Escaped from Police Custody')
# number_person_escaped_2016.show()
number_person_escaped_2016_renamed=number_person_escaped_2016.withColumnRenamed('Total Number of Persons Escaped from Police Custody','Total Number of persons_2016')
# number_person_escaped_2016_renamed.show()
number_person_escaped_2017=df5.select('State/UT','Persons Escaped - Total')
number_person_escaped_2017_renamed=number_person_escaped_2017.withColumnRenamed('Persons Escaped - Total','Total Number of persons_2017')
number_person_escaped_2018=df6.select('State/UT','Persons Escaped - Total')
number_person_escaped_2018_renamed=number_person_escaped_2018.withColumnRenamed('Persons Escaped - Total','Total Number of persons_2018')
number_person_escaped_2016_join=number_person_escaped_2016_renamed.join(number_person_escaped_2017_renamed,'State/UT')
number_person_escaped_join=number_person_escaped_2016_join.join(number_person_escaped_2018_renamed,'State/UT')
# number_person_escaped_join.show()
total_number_person_escaped=number_person_escaped_join.withColumn('Total_number_person_escaped',((number_person_escaped_2016_renamed['Total Number of persons_2016'])+(number_person_escaped_2017_renamed['Total Number of persons_2017'])+(number_person_escaped_2018_renamed['Total Number of persons_2018'])))
# total_number_person_escaped.show()
escaped_persons_in_states=total_number_person_escaped.select('State/UT','Total_number_person_escaped')
# escaped_persons_in_states.show()
least_escapedno_states=escaped_persons_in_states.sort(escaped_persons_in_states['Total_number_person_escaped'].asc())
least_escapedno_10_states=least_escapedno_states.limit(10)
least_escapedno_10_states.show()
for_pie_leastescape_states = least_escapedno_10_states.toPandas()
for_pie_leastescape_states.set_index('State/UT',inplace=True)
for_pie_leastescape_states.plot(kind='pie', y="Total_number_person_escaped", figsize=(10, 5))
plt.xlabel('State')
plt.ylabel("escaped_person")
plt.title("states where least prisoner escape")
plt.legend(for_pie_leastescape_states.index,title='States')
plt.xticks(rotation=90)
plt.show()